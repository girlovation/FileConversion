<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<context:annotation-config />
	<tx:annotation-driven />
	<context:component-scan base-package="com.acn.file.conversion.tool.*" />

	<bean id="propertiesConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">

		<property name="locations">
			<list>
				<value>classpath:jsontocsv.properties</value>
				<!-- <value>file:C:/Workspaces/Workspace_1/properties for jsontocsv/jsontocsv.properties</value> -->
			</list>
		</property>
	</bean>

	<!-- Spring Batch Job -->
	<batch:job id="jsonToCsvBatchJob">

		<batch:step id="jsonToCsvBatchStepId">
			<batch:tasklet>
				<batch:chunk reader="jsonToCsvFlatFileItemReader"
					writer="jsonToCsvFlatFileItemWriter" commit-interval="${json_to_csv.chunck_size}"
					skip-limit="${json_to_csv.skip_limit}">
					<batch:skippable-exception-classes>
						<batch:include
							class="org.springframework.batch.item.file.FlatFileParseException" />
					</batch:skippable-exception-classes>
				</batch:chunk>
				<batch:listeners>
					<batch:listener ref="customReadListener"></batch:listener>
					<batch:listener ref="skipListener">
					</batch:listener>
				</batch:listeners>
			</batch:tasklet>
		</batch:step>
		<batch:listeners>
			<batch:listener ref="jobListener"></batch:listener>
		</batch:listeners>
	</batch:job>

	<!-- <bean id="jsonTocsvProcessor" class="com.acn.file.conversion.tool.processor.JsonToCsvProcessor"></bean> -->

	<bean id="customReadListener"
		class="com.acn.file.conversion.tool.listeners.CustomReadListener"></bean>


	<bean id="skipListener" class="com.acn.file.conversion.tool.listeners.SkipListener"></bean>

	<!-- Job Listener -->

	<bean id="jobListener" class="com.acn.file.conversion.tool.listeners.JobListener">
	</bean>


	<!-- Reader -->
	<bean id="jsonToCsvFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<!-- Read a json file -->
		<property name="resource" value="file:#{jobParameters['inputPath']}" />
		<!-- <property name="resource" value="file:C:\Pratibha\Test.json" /> -->
		<property name="recordSeparatorPolicy" ref="recordPolicy" />
		<!-- <property name="lineMapper" ref="lineMapper" /> -->
		<property name="lineMapperDynamic" ref="lineMapperDynamic" />
	</bean>

	<bean id="lineMapper" class="com.acn.file.conversion.tool.utils.JsonToCsvLineMapper">
		<property name="delegate" ref="lineMapperType" />
	</bean>

	<bean id="lineMapperDynamic" class="com.acn.file.conversion.tool.utils.JsonToCsvLineMapper">
		<property name="delegate" ref="lineMapperType" />
	</bean>

	<bean id="lineMapperType"
		class="org.springframework.batch.item.file.mapping.JsonLineMapper">
	</bean>


	<bean id="recordPolicy"
		class="org.springframework.batch.item.file.separator.JsonRecordSeparatorPolicy" />


	<bean class="org.springframework.batch.item.file.FlatFileItemWriter"
		id="jsonToCsvFlatFileItemWriter" scope="step">
		<property name="resource" value="file:#{jobParameters['outputPath']}" />
		<!-- <property name="headerCallback"> <bean class="com.acn.file.conversion.tool.vos.ProductHeader" 
			/> </property> -->
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="#{jobParameters['outputFieldSeperator']}" />
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="#{jobParameters['outputHeaders']}" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>






</beans>
